// schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Business {
  id             Int             @id @default(autoincrement())
  name           String
  location       String
  description    String
  users          User[]
  daySchedules   DaySchedule[]
  membership     Membership?
  durationConfig DurationConfig?
  pricing        Pricing?
  uiSettings     Json            @default("{\"colors\":{\"primary\":\"#4F46E5\",\"secondary\":\"#1F2937\",\"accent\":\"#10B981\"},\"branding\":{\"businessName\":\"\",\"displayName\":\"\",\"description\":\"\"}}")
  reservations   Reservation[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model DaySchedule {
  id               Int      @id @default(autoincrement())
  business         Business @relation(fields: [businessId], references: [id])
  businessId       Int
  dayOfWeek        String // monday, tuesday, etc.
  isOpen           Boolean  @default(true)
  openTime         String // 24h format HH:mm
  closeTime        String // 24h format HH:mm
  peakHoursEnabled Boolean  @default(false)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@unique([businessId, dayOfWeek])
}

model User {
  id         Int      @id @default(autoincrement())
  business   Business @relation(fields: [businessId], references: [id])
  businessId Int
  userRole   Role     @relation(fields: [userRoleId], references: [id])
  userRoleId Int
  username   String   @unique
  email      String   @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Role {
  id         Int      @id @default(autoincrement())
  customer   Boolean  @default(true)
  employee   Boolean  @default(false)
  supervisor Boolean  @default(false)
  admin      Boolean  @default(false)
  users      User[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Membership {
  id          Int      @id @default(autoincrement())
  business    Business @relation(fields: [businessId], references: [id])
  businessId  Int      @unique
  yearlyCost  Float
  monthlyCost Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model DurationConfig {
  id          Int      @id @default(autoincrement())
  business    Business @relation(fields: [businessId], references: [id])
  businessId  Int      @unique
  minDuration Float
  maxDuration Float
  interval    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Pricing {
  id                          Int      @id @default(autoincrement())
  business                    Business @relation(fields: [businessId], references: [id])
  businessId                  Int      @unique
  weekdayPrice                Float
  weekendPrice                Float
  membershipDiscount          Float    @default(0)
  soloPricingDiscount         Float    @default(0)
  peakHourPricingEnabled      Boolean  @default(false)
  peakHourStart               String   @default("09:00")
  peakHourEnd                 String   @default("17:00")
  peakHourPriceAdditionalCost Float    @default(0)
  createdAt                   DateTime @default(now())
  updatedAt                   DateTime @updatedAt
}

model Reservation {
  id         Int      @id @default(autoincrement())
  business   Business @relation(fields: [businessId], references: [id])
  businessId Int
  date       String
  startTime  String
  duration   Float
  price      Float
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
